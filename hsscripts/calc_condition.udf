
	\begin{def}
		CalcCond:{
			Cognac_ver:select{"cognac112"} "使用する Cognac のバージョン",
			Cores: int "計算に使用するコア数を指定"
			} "計算の条件を設定"
		SimulationCond:{
			Model:{TargetModel:select{"Regular_NW", "Random_NW"} "ネットワークのモデルを選択",
				Regular_NW:{chains:select{"3_Chain_S", "3_Chain_D", "4_Chain", "6_Chain", "8_Chain"} "分岐の数と種類を選択"
					} "規則構造での条件を入力",
				Random_NW:{chains:select{"3_Chain", "4_Chain", "5_Chain", "6_Chain", "7_Chain"} "分岐の数と種類を選択",
					Calc_Topolpgy:select{"Calc", "Read"} "ランダムネットワークの「計算を行うか、読み込むか」を選択",
						Calc:{pre_sampling:int "プレサンプリング数", pre_try:int "プレサンプリング時の再トライ数", sampling:int "サンプリング数", try:int "サンプリング時の再トライ数", n_parallel:int "並行計算のCPU数"} "ランダムサーチ計算する場合の条件を設定",
						Read:{dir_name:string} "過去の計算結果のディレクトリを記入",
					N_histgram:int "ヒストグラムの分割数"
					} "ランダム構造での条件を入力"
				} "シミュレーションの条件を設定"
			Type:{
				SimType:select{
					"NPT",
					"Entangled",
					"Multi",   
					"Multi_entangled",
					"Gel",    
					"Gel_entangled",
					"Gel_concd",
					"Gel_concd_entangled"
					} "アンサンブル等のシミュレーションの条件を選択",
					NPT:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", ExpansionRatio: float "NPT 計算での初期膨張率", StepPress[]: float "NPT 計算での圧力変化"} "密度、末端間距離を設定値に合わせるように多重度を自動設定。\n絡み合いが入らないようにNPTで縮める。",
					Entangled:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Step_rfc[]: float "Slow Push Off での rfc 条件"} "密度、末端間距離を設定値に合わせるように多重度を自動設定。\n絡み合いが入るように初期化",
					Multi:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", ExpansionRatio: float "NPT 計算での初期膨張率", StepPress[]: float "NPT 計算での圧力変化"} "設定した多重度で、密度を設定値になるように、システムサイズを縮める",
					Multi_entangled:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", Step_rfc[]: float "Slow Push Off での rfc 条件"} "設定した多重度で、密度を設定値になるようにシステムサイズを縮め、絡み合いが入るように初期化",
					Gel:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", ExpansionRatio: float "NPT 計算での初期膨張率", StepPress[]: float "NPT 計算での圧力変化"} "設定した多重度で、密度、末端間距離を設定値に合わせるように溶剤を添加",
					Gel_entangled:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", Step_rfc[]: float "Slow Push Off での rfc 条件"} "設定した多重度で、密度、末端間距離を設定値に合わせるように溶剤を添加、絡み合いが入るように初期化",
					Gel_concd:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", NV: float "Non Volatile: 固形分量 (0 to 1.0)", ExpansionRatio: float "NPT 計算での初期膨張率", StepPress[]: float "NPT 計算での圧力変化"} "設定した多重度で、溶剤量変化",
					Gel_concd_entangled:{N_Segments: int "ストランド中のセグメント数", N_Subchain: int "各セグメントの側鎖の数", N_UnitCells: int "一辺あたりのユニットセルの数", Multiplicities: int "任意の多重度に設定可能", NV: float "Non Volatile: 固形分量 (0 to 1.0)", Step_rfc[]: float "Slow Push Off での rfc 条件"} "設定した多重度で、溶剤量変化、絡み合いが入るように初期化"
				} "アンサンブル等のシミュレーションの条件を選択",
			Equilib_Condition:{
					repeat: int "平衡化計算の繰り返し数",
					Time:{delta_T: double, Total_Steps: int, Output_Interval_Steps: int} "平衡化計算の時間条件を入力"
				},
			target_density:float "平衡化シミュレーション実行時に使用する密度"
			} "シミュレーションの条件を設定"
	\end{def}

		
\begin{data}
CalcCond:{"cognac112",1}
SimulationCond:{
 {"Random_NW",{"4_Chain"}{"4_Chain","Calc",{100,100,100,100,1}{""}50}}
 {
  "NPT",
  {
   20,
   0,
   3,
   2.0000000,
   [0.2000000,0.5000000,1.0000000,2.0000000,3.0000000,4.5000000]
  }
  {
   20,
   0,
   3,
   [1.0730000,1.0000000,0.9000000,0.8000000]
  }
  {
   20,
   0,
   3,
   1,
   2.0000000,
   [0.2000000,0.5000000,1.0000000,2.0000000,5.0000000,6.5000000,7.0000000]
  }
  {
   20,
   0,
   3,
   1,
   [1.0730000,1.0000000,0.9000000,0.8000000]
  }
  {
   20,
   0,
   3,
   1,
   2.0000000,
   [0.2000000,0.5000000,1.0000000,2.0000000,5.0000000,6.5000000,7.0000000]
  }
  {
   20,
   0,
   3,
   1,
   [1.0730000,1.0000000,0.9000000,0.8000000]
  }
  {
   20,
   0,
   3,
   1,
   0.5000000,
   2.0000000,
   [0.2000000,0.5000000,1.0000000,2.0000000,5.0000000,6.5000000,7.0000000]
  }
  {
   20,
   0,
   3,
   1,
   0.5000000,
   [1.0730000,1.0000000,0.9000000,0.8000000]
  }
 }
 {4,{1.00000000000000e-02,200000,1000}}
 0.8500000
}
\end{data}
